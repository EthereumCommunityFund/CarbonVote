/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VotingOption, VotingOptionInterface } from "../VotingOption";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mainContract",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pollIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_option_index",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "castTransactionVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mainContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "option_index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pollIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "removeVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b4538038062001b458339818101604052810190620000379190620002dc565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360019081620000889190620005c4565b508260028190555081600381905550806004819055505050505050620006ab565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ea82620000bd565b9050919050565b620000fc81620000dd565b81146200010857600080fd5b50565b6000815190506200011c81620000f1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000177826200012c565b810181811067ffffffffffffffff821117156200019957620001986200013d565b5b80604052505050565b6000620001ae620000a9565b9050620001bc82826200016c565b919050565b600067ffffffffffffffff821115620001df57620001de6200013d565b5b620001ea826200012c565b9050602081019050919050565b60005b8381101562000217578082015181840152602081019050620001fa565b60008484015250505050565b60006200023a6200023484620001c1565b620001a2565b90508281526020810184848401111562000259576200025862000127565b5b62000266848285620001f7565b509392505050565b600082601f83011262000286576200028562000122565b5b81516200029884826020860162000223565b91505092915050565b6000819050919050565b620002b681620002a1565b8114620002c257600080fd5b50565b600081519050620002d681620002ab565b92915050565b600080600080600060a08688031215620002fb57620002fa620000b3565b5b60006200030b888289016200010b565b955050602086015167ffffffffffffffff8111156200032f576200032e620000b8565b5b6200033d888289016200026e565b94505060406200035088828901620002c5565b93505060606200036388828901620002c5565b92505060806200037688828901620002c5565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003d657607f821691505b602082108103620003ec57620003eb6200038e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000417565b62000462868362000417565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004a56200049f6200049984620002a1565b6200047a565b620002a1565b9050919050565b6000819050919050565b620004c18362000484565b620004d9620004d082620004ac565b84845462000424565b825550505050565b600090565b620004f0620004e1565b620004fd818484620004b6565b505050565b5b81811015620005255762000519600082620004e6565b60018101905062000503565b5050565b601f82111562000574576200053e81620003f2565b620005498462000407565b8101602085101562000559578190505b62000571620005688562000407565b83018262000502565b50505b505050565b600082821c905092915050565b6000620005996000198460080262000579565b1980831691505092915050565b6000620005b4838362000586565b9150826002028217905092915050565b620005cf8262000383565b67ffffffffffffffff811115620005eb57620005ea6200013d565b5b620005f78254620003bd565b6200060482828562000529565b600060209050601f8311600181146200063c576000841562000627578287015190505b620006338582620005a6565b865550620006a3565b601f1984166200064c86620003f2565b60005b8281101562000676578489015182556001820191506020850194506020810190506200064f565b8683101562000696578489015162000692601f89168262000586565b8355505b6001600288020188555050505b505050505050565b61148a80620006bb6000396000f3fe6080604052600436106100955760003560e01c806399100fa51161005957806399100fa5146101bd578063c0f2a777146101e8578063d270e7ab14610213578063da58c7d91461023e578063f52fa10a1461027b576100e8565b80630649370b146100ea57806306fdde03146101135780633197cbb61461013e5780633ccc1f5314610169578063769e2da514610192576100e8565b366100e857600034146100dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d490610c1e565b60405180910390fd5b6100e6336102a4565b005b005b3480156100f657600080fd5b50610111600480360381019061010c9190610cb0565b6102a4565b005b34801561011f57600080fd5b506101286104e0565b6040516101359190610d5c565b60405180910390f35b34801561014a57600080fd5b5061015361056e565b6040516101609190610d97565b60405180910390f35b34801561017557600080fd5b50610190600480360381019061018b9190610cb0565b610574565b005b34801561019e57600080fd5b506101a7610903565b6040516101b49190610d97565b60405180910390f35b3480156101c957600080fd5b506101d2610909565b6040516101df9190610d97565b60405180910390f35b3480156101f457600080fd5b506101fd61090f565b60405161020a9190610d97565b60405180910390f35b34801561021f57600080fd5b5061022861091c565b6040516102359190610dc1565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190610e08565b610940565b6040516102729190610dc1565b60405180910390f35b34801561028757600080fd5b506102a2600480360381019061029d919061100b565b61097f565b005b60025442106102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df906110e2565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fafc9246826003546004546040518463ffffffff1660e01b815260040161034993929190611102565b600060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b50505050600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610485576005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005805490506104419190611168565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600180546104ed906111cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610519906111cb565b80156105665780601f1061053b57610100808354040283529160200191610566565b820191906000526020600020905b81548152906001019060200180831161054957829003601f168201915b505050505081565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f990611248565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661068e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610685906112b4565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506005805490508110610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090611320565b60405180910390fd5b6000600160058054905061072d9190611168565b905080821461081c5760006005828154811061074c5761074b611340565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806005848154811061078e5761078d611340565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600580548061082e5761082d61136f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090556000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60045481565b60035481565b6000600580549050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005818154811061095057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025442106109c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ba906110e2565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316b752f08460035460045486866040518663ffffffff1660e01b8152600401610a289594939291906113f3565b600060405180830381600087803b158015610a4257600080fd5b505af1158015610a56573d6000803e3d6000fd5b50505050600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b64576005839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600580549050610b209190611168565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600082825260208201905092915050565b7f43616e6e6f742073656e6420455448207769746820766f746500000000000000600082015250565b6000610c08601983610bc1565b9150610c1382610bd2565b602082019050919050565b60006020820190508181036000830152610c3781610bfb565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c7d82610c52565b9050919050565b610c8d81610c72565b8114610c9857600080fd5b50565b600081359050610caa81610c84565b92915050565b600060208284031215610cc657610cc5610c48565b5b6000610cd484828501610c9b565b91505092915050565b600081519050919050565b60005b83811015610d06578082015181840152602081019050610ceb565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d2e82610cdd565b610d388185610bc1565b9350610d48818560208601610ce8565b610d5181610d12565b840191505092915050565b60006020820190508181036000830152610d768184610d23565b905092915050565b6000819050919050565b610d9181610d7e565b82525050565b6000602082019050610dac6000830184610d88565b92915050565b610dbb81610c72565b82525050565b6000602082019050610dd66000830184610db2565b92915050565b610de581610d7e565b8114610df057600080fd5b50565b600081359050610e0281610ddc565b92915050565b600060208284031215610e1e57610e1d610c48565b5b6000610e2c84828501610df3565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e7782610d12565b810181811067ffffffffffffffff82111715610e9657610e95610e3f565b5b80604052505050565b6000610ea9610c3e565b9050610eb58282610e6e565b919050565b600067ffffffffffffffff821115610ed557610ed4610e3f565b5b610ede82610d12565b9050602081019050919050565b82818337600083830152505050565b6000610f0d610f0884610eba565b610e9f565b905082815260208101848484011115610f2957610f28610e3a565b5b610f34848285610eeb565b509392505050565b600082601f830112610f5157610f50610e35565b5b8135610f61848260208601610efa565b91505092915050565b600067ffffffffffffffff821115610f8557610f84610e3f565b5b610f8e82610d12565b9050602081019050919050565b6000610fae610fa984610f6a565b610e9f565b905082815260208101848484011115610fca57610fc9610e3a565b5b610fd5848285610eeb565b509392505050565b600082601f830112610ff257610ff1610e35565b5b8135611002848260208601610f9b565b91505092915050565b60008060006060848603121561102457611023610c48565b5b600061103286828701610c9b565b935050602084013567ffffffffffffffff81111561105357611052610c4d565b5b61105f86828701610f3c565b925050604084013567ffffffffffffffff8111156110805761107f610c4d565b5b61108c86828701610fdd565b9150509250925092565b7f506f6c6c2068617320656e646564000000000000000000000000000000000000600082015250565b60006110cc600e83610bc1565b91506110d782611096565b602082019050919050565b600060208201905081810360008301526110fb816110bf565b9050919050565b60006060820190506111176000830186610db2565b6111246020830185610d88565b6111316040830184610d88565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061117382610d7e565b915061117e83610d7e565b925082820390508181111561119657611195611139565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111e357607f821691505b6020821081036111f6576111f561119c565b5b50919050565b7f596f7520646f6e27742068617665206163636573730000000000000000000000600082015250565b6000611232601583610bc1565b915061123d826111fc565b602082019050919050565b6000602082019050818103600083015261126181611225565b9050919050565b7f4e6f20766f746520746f2072656d6f7665000000000000000000000000000000600082015250565b600061129e601183610bc1565b91506112a982611268565b602082019050919050565b600060208201905081810360008301526112cd81611291565b9050919050565b7f566f746572206e6f7420666f756e640000000000000000000000000000000000600082015250565b600061130a600f83610bc1565b9150611315826112d4565b602082019050919050565b60006020820190508181036000830152611339816112fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006113c58261139e565b6113cf81856113a9565b93506113df818560208601610ce8565b6113e881610d12565b840191505092915050565b600060a0820190506114086000830188610db2565b6114156020830187610d88565b6114226040830186610d88565b818103606083015261143481856113ba565b905081810360808301526114488184610d23565b9050969550505050505056fea26469706673582212200e7257ab15932d837fcccdf2aa50c8471360e8af35fdd4d6e2e44edb060c3e5264736f6c63430008130033";

type VotingOptionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingOptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingOption__factory extends ContractFactory {
  constructor(...args: VotingOptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _mainContract: AddressLike,
    _name: string,
    _endTime: BigNumberish,
    _pollIndex: BigNumberish,
    _option_index: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _mainContract,
      _name,
      _endTime,
      _pollIndex,
      _option_index,
      overrides || {}
    );
  }
  override deploy(
    _mainContract: AddressLike,
    _name: string,
    _endTime: BigNumberish,
    _pollIndex: BigNumberish,
    _option_index: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _mainContract,
      _name,
      _endTime,
      _pollIndex,
      _option_index,
      overrides || {}
    ) as Promise<
      VotingOption & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VotingOption__factory {
    return super.connect(runner) as VotingOption__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingOptionInterface {
    return new Interface(_abi) as VotingOptionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotingOption {
    return new Contract(address, _abi, runner) as unknown as VotingOption;
  }
}
